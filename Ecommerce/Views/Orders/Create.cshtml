@model Ecommerce.Models.NewOrderView

@{
    ViewBag.Title = "Create Order";
}

<h2>Create Order</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="row">
            <div class="col-md-6">
        
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @Html.ActionLink("Add Product", "AddProduct", new { }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Back to Orders", "Index", new { }, new { @class = "btn btn-success" })
                    </div>
                </div>

            </div>
        </div>
        
    </div>
}

<h4>Details</h4>
<hr />
@if (Model.Details.Count == 0)
{
    <h5>No details added yet</h5>
}
else
{
    <h5>Fuck Yeahh!!!!</h5>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

