@model Ecommerce.Models.NewOrderView

@{
    ViewBag.Title = "Create Order";
}

<h2>Create Order</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="row">
            <div class="col-md-6">
        
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class='input-group date' id='datepicker' style="width:280px">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                </div>
            
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @Html.ActionLink("Add Product", "AddProduct", "Orders", new { }, new { @class = "dialog-window btn btn-info" })
                        @Html.ActionLink("Back to Orders", "Index", new { }, new { @class = "btn btn-success" })
                    </div>
                </div>

            </div>
        </div>
        
    </div>
}

<h4>Details</h4>
<hr />
@if(Model.Details.Count == 0)
{
    <h5>No details added yet</h5>
}
else
{

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Product.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].TaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Value)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Details)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.Product.Image))
                    {
                        @Html.DisplayFor(modelItem => item.Product.Image)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.TaxRate)
                </td align="right">
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteProduct", new { id = item.ProductID }, new { @class="btn btn-danger", onclick="return confirm('Are you sure to delete this record?')" })
                </td>
               </tr>
        }
        <tr>
            <td colspan="4" align="right">
                <strong>Total</strong>
            </td>
            <td align="right">
                <strong>@Html.DisplayFor(model => model.TotalQuantity)</strong>
            </td>
            <td align="right">
                <strong>@Html.DisplayFor(model => model.TotalValue)</strong>
            </td>

        </tr>
    </table>

    
}


<div class="modal fade" id="AddProduct" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body"><div class="te">Please wait...</div></div>
        </div>
    </div>
</div>


@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
        $('#datepicker').datetimepicker({ format: 'YYYY/MM/DD' });
    });

    $(document).ready(function () {
        $("body").on("click", "a.dialog-window", null, function (e) {
            e.preventDefault();
            var $link = $(this);
            var title = $link.text();
            $('#AddProduct .modal-title').html(title);
            var url = $(this).attr('href');
            if (url.indexOf('#') == 0) {
                $('#AddProduct').modal('show');
            }
            else {
                $.get(url, function (data) {
                    $('#AddProduct .te').html(data);
                    $('#AddProduct').modal();
                }).success(function () { $('input:text:visible:first').focus(); });

            }
        });
    });

</script>
        }

